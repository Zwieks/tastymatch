/*---------------------------------------------------
  LESS Elements 0.9
---------------------------------------------------
  A set of useful LESS mixins
  More info at: http://lesselements.com
---------------------------------------------------*/

// Gradient (for usage, see: http://webdesign.tutsplus.com/tutorials/making-gradients-easier-with-less-mixins--cms-24072)
.gradient(@type; @colors; @dir: 0deg; @prefixes: webkit, moz, ms, o; @index: length(@prefixes)) when (@index > 0) {
    .gradient(@type; @colors; @dir; @prefixes; (@index - 1));
    @prefix  : extract(@prefixes, @index);
    @dir-old : 90 - (@dir);
    background-image: ~"-@{prefix}-@{type}-gradient(@{dir-old}, @{colors})";
}

// CSS3 filters
.filter(@value) {
    -webkit-filter: @value;
       -moz-filter: @value;
        -ms-filter: @value;
         -o-filter: @value;
            filter: @value;
}

// CSS blur
.blur(@radius: 5px) {
    -webkit-filter: blur(@radius);
       -moz-filter: blur(@radius);
        -ms-filter: blur(@radius);
         -o-filter: blur(@radius);
            filter: blur(@radius);
}

// Border radius
.border-radius(@radius: @borderRadius) {
  -webkit-border-radius: @radius;
     -moz-border-radius: @radius;
          border-radius: @radius;
}

// Backface visibility
.backface-visibility(@value: hidden) {
  -webkit-backface-visibility: @value;
     -moz-backface-visibility: @value;
          backface-visibility: @value;
}

// Appearence {
.appearance(@argument: none) {
    -webkit-appearance: @argument;
       -moz-appearance: @argument;
        -ms-appearance: @argument;
            appearance: @argument;
}

// Transitions
.transition(@value: @animSpeed ease-out) {
  -webkit-transition: @value;
     -moz-transition: @value;
       -o-transition: @value;
          transition: @value;
}

// Transition delay
.transition-delay(@value: @animSpeed) {
  -webkit-transition-delay: @value;
     -moz-transition-delay: @value;
       -o-transition-delay: @value;
          transition-delay: @value;
}

// Transition delay
.transition-duration(@value: @animSpeed) {
    -webkit-transition-duration: @value;
       -moz-transition-duration: @value;
         -o-transition-duration: @value;
            transition-duration: @value;
}

// Drop shadow
.box-shadow(@boxShadow: @shadow) {
  -webkit-box-shadow: @boxShadow;
     -moz-box-shadow: @boxShadow;
          box-shadow: @boxShadow;
}

// Box sizing
.box-sizing(@sizing: border-box) {
  -webkit-box-sizing: @sizing;
     -moz-box-sizing: @sizing;
      -ms-box-sizing: @sizing;
          box-sizing: @sizing;
}

.user-select(@argument: none) {
  -webkit-user-select: @argument;
     -moz-user-select: @argument;
      -ms-user-select: @argument;
       -o-user-select: @argument;
          user-select: @argument;
}

// Columns
.columns(@colcount: 2, @colgap: @spacing) {
   -webkit-column-count: @colcount;
     -webkit-column-gap: @colgap;
      -moz-column-count: @colcount;
        -moz-column-gap: @colgap;
           column-count: @colcount;
             column-gap: @colgap;
}

// Background size
.background-size(@value: cover) {
  -webkit-background-size: @value; // Android 2.1 - 2.3
     -moz-background-size: @value; // FireFox 3.6
       -o-background-size: @value; // Opera 10.0 - 10.1
          background-size: @value;
}

// Background clip
.background-clip(@argument: padding-box) {
  -webkit-background-clip: @argument;
     -moz-background-clip: @argument;
      -ms-background-clip: @argument;
       -o-background-clip: @argument;
          background-clip: @argument;
}

// Animation
.animation(@animation) {
  -webkit-animation: @animation;
     -moz-animation: @animation;
      -ms-animation: @animation;
       -o-animation: @animation;
          animation: @animation;
}

// Animation
.animation-duration(@animation-duration) {
    -webkit-animation-duration: @animation-duration;
    -moz-animation-duration: @animation-duration;
    -ms-animation-duration: @animation-duration;
    -o-animation-duration: @animation-duration;
    animation-duration: @animation-duration;
}

// Animation fill mode
.animation-fill-mode(@value) {
    -webkit-animation-fill-mode: @value;
    -moz-animation-fill-mode: @value;
    -ms-animation-fill-mode: @value;
    -o-animation-fill-mode: @value;
    animation-fill-mode: @value;
}

// Transform style
.transform-style(@value: preserve-3d) {
  -webkit-transform-style: @value;
     -moz-transform-style: @value;
      -ms-transform-style: @value;
       -o-transform-style: @value;
          transform-style: @value;
}

// Transform origin
.transform-origin(@value) {
  -webkit-transform-origin: @value;
     -moz-transform-origin: @value;
      -ms-transform-origin: @value;
       -o-transform-origin: @value;
          transform-origin: @value;
}

// Perspective
.perspective(@value) {
  -webkit-perspective: @value;
     -moz-perspective: @value;
      -ms-perspective: @value;
       -o-perspective: @value;
          perspective: @value;
}

// Algemene transform
.transform(@value) {
  -webkit-transform: @value;
     -moz-transform: @value;
      -ms-transform: @value;
       -o-transform: @value;
          transform: @value;
}

// Transform rotate
.rotate(@degrees) {
  -webkit-transform: rotate(@degrees);
     -moz-transform: rotate(@degrees);
      -ms-transform: rotate(@degrees);
       -o-transform: rotate(@degrees);
          transform: rotate(@degrees);
}

// Transform rotate X
.rotateX(@degrees) {
  -webkit-transform: rotateX(@degrees);
     -moz-transform: rotateX(@degrees);
      -ms-transform: rotateX(@degrees);
       -o-transform: rotateX(@degrees);
          transform: rotateX(@degrees);
}

// Transform rotate Y
.rotateY(@degrees) {
  -webkit-transform: rotateY(@degrees);
     -moz-transform: rotateY(@degrees);
      -ms-transform: rotateY(@degrees);
       -o-transform: rotateY(@degrees);
          transform: rotateY(@degrees);
}

// Transform rotate 3d
.rotate3d(@x, @y, @z) {
  -webkit-transform: rotate(@x, @y, @z);
     -moz-transform: rotate(@x, @y, @z);
      -ms-transform: rotate(@x, @y, @z);
       -o-transform: rotate(@x, @y, @z);
          transform: rotate(@x, @y, @z);
}

// Transform scale 3d
.scale3d(@x, @y, @z) {
  -webkit-transform: scale3d(@x, @y, @z);
     -moz-transform: scale3d(@x, @y, @z);
      -ms-transform: scale3d(@x, @y, @z);
       -o-transform: scale3d(@x, @y, @z);
          transform: scale3d(@x, @y, @z);
}

// Transform scale-x
.scaleX(@ratio) {
  -webkit-transform: scaleX(@ratio);
     -moz-transform: scaleX(@ratio);
      -ms-transform: scaleX(@ratio);
       -o-transform: scaleX(@ratio);
          transform: scaleX(@ratio);
}

// Transform scale-y
.scaleY(@ratio) {
  -webkit-transform: scaleY(@ratio);
     -moz-transform: scaleY(@ratio);
      -ms-transform: scaleY(@ratio);
       -o-transform: scaleY(@ratio);
          transform: scaleY(@ratio);
}

// Transform scale
.scale(@ratio) {
  -webkit-transform: scale(@ratio);
     -moz-transform: scale(@ratio);
      -ms-transform: scale(@ratio);
       -o-transform: scale(@ratio);
          transform: scale(@ratio);
}

// Transform skew
.skew(@x, @y) {
  -webkit-transform: skew(@x, @y);
     -moz-transform: skew(@x, @y);
      -ms-transform: skew(@x, @y);
       -o-transform: skew(@x, @y);
          transform: skew(@x, @y);
}

// Transform translate
.translate(@x, @y) {
  -webkit-transform: translate(@x, @y);
     -moz-transform: translate(@x, @y);
      -ms-transform: translate(@x, @y);
       -o-transform: translate(@x, @y);
          transform: translate(@x, @y);
}

// Transform translate X
.translateX(@value) {
    -webkit-transform: translateX(@value);
    -moz-transform: translateX(@value);
    -ms-transform: translateX(@value);
    -o-transform: translateX(@value);
    transform: translateX(@value);
}

// Transform translate Y
.translateY(@value) {
  -webkit-transform: translateY(@value);
     -moz-transform: translateY(@value);
      -ms-transform: translateY(@value);
       -o-transform: translateY(@value);
          transform: translateY(@value);
}

// Transform translate 3D
.translate3d(@x, @y, @z) {
    -webkit-transform: translate3d(@x, @y, @z);
    -moz-transform: translate3d(@x, @y, @z);
    -ms-transform: translate3d(@x, @y, @z);
    -o-transform: translate3d(@x, @y, @z);
    transform: translate3d(@x, @y, @z);
}

// Transform translate Z
.translateZ(@value) {
    -webkit-transform: translateZ(@value);
    -moz-transform: translateZ(@value);
    -ms-transform: translateZ(@value);
    -o-transform: translateZ(@value);
    transform: translateZ(@value);
}

// Transform X rotate
.rotateX(@deg) {
  -webkit-transform: rotateX(@deg);
     -moz-transform: rotateX(@deg);
      -ms-transform: rotateX(@deg);
       -o-transform: rotateX(@deg);
          transform: rotateX(@deg);
}

// Transform Y rotate
.rotateY(@deg) {
  -webkit-transform: rotateY(@deg);
     -moz-transform: rotateY(@deg);
      -ms-transform: rotateY(@deg);
       -o-transform: rotateY(@deg);
          transform: rotateY(@deg);
}

// Center element top and left
.center {
    .translate(-50%, -50%);
    position: absolute;
    top: 50%;
    left: 50%;
}

// Center element left
.centerX {
    .translateX(-50%);
    position: absolute;
    left: 50%;
}

// Center element top
.centerY {
    .translateY(-50%);
    position: absolute;
    top: 50%;
}